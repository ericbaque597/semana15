import tkinter as tk
from tkinter import messagebox

# Clase principal de la aplicación de tareas
class TareaApp:
    def __init__(self, root):
        # Inicializamos la ventana principal de la aplicación
        self.root = root
        self.root.title("Gestor de Tareas")  # Título de la ventana

        # Lista para almacenar las tareas
        self.tareas = []

        # Componente para introducir nuevas tareas (campo de texto)
        self.entry_tarea = tk.Entry(root, width=40)
        self.entry_tarea.grid(row=0, column=0, padx=10, pady=10)  # Ubicación en la cuadrícula

        # Botón para agregar una nueva tarea
        self.boton_agregar = tk.Button(root, text="Añadir Tarea", command=self.agregar_tarea)
        self.boton_agregar.grid(row=0, column=1, padx=10, pady=10)  # Ubicación en la cuadrícula

        # Componente para mostrar las tareas en una lista
        self.lista_tareas = tk.Listbox(root, width=50, height=10, selectmode=tk.SINGLE)
        self.lista_tareas.grid(row=1, column=0, columnspan=2, padx=10, pady=10)  # Ubicación en la cuadrícula

        # Botón para marcar una tarea como completada
        self.boton_completar = tk.Button(root, text="Marcar como Completada", command=self.marcar_completada)
        self.boton_completar.grid(row=2, column=0, padx=10, pady=10)  # Ubicación en la cuadrícula

        # Botón para eliminar una tarea
        self.boton_eliminar = tk.Button(root, text="Eliminar Tarea", command=self.eliminar_tarea)
        self.boton_eliminar.grid(row=2, column=1, padx=10, pady=10)  # Ubicación en la cuadrícula

        # Vinculamos el evento de presionar Enter con la función de agregar tarea
        self.entry_tarea.bind("<Return>", self.agregar_tarea_con_teclado)

    # Método para agregar una nueva tarea
    def agregar_tarea(self):
        tarea = self.entry_tarea.get()  # Obtener el texto ingresado
        if tarea:  # Verificamos que no esté vacío
            self.tareas.append(tarea)  # Añadir la tarea a la lista interna
            self.lista_tareas.insert(tk.END, tarea)  # Añadir la tarea a la lista visual
            self.entry_tarea.delete(0, tk.END)  # Limpiar el campo de texto después de agregarla
        else:
            messagebox.showwarning("Entrada Vacía", "Por favor, escribe una tarea.")  # Mensaje si la tarea está vacía

    # Método vinculado al evento de presionar Enter en el campo de texto
    def agregar_tarea_con_teclado(self, event=None):
        self.agregar_tarea()  # Ejecuta la misma lógica que el botón de agregar tarea

    # Método para marcar una tarea como completada
    def marcar_completada(self):
        try:
            # Obtenemos el índice de la tarea seleccionada
            indice = self.lista_tareas.curselection()[0]
            tarea = self.lista_tareas.get(indice)  # Obtenemos el texto de la tarea
            tarea_completada = f"{tarea} - Completada"  # Añadimos un indicador de completada a la tarea
            self.lista_tareas.delete(indice)  # Eliminamos la tarea original de la lista
            self.lista_tareas.insert(indice, tarea_completada)  # Insertamos la tarea modificada
        except IndexError:
            # Si no hay tarea seleccionada, mostramos una advertencia
            messagebox.showwarning("Selección Errónea", "Por favor, selecciona una tarea.")

    # Método para eliminar una tarea
    def eliminar_tarea(self):
        try:
            # Obtenemos el índice de la tarea seleccionada
            indice = self.lista_tareas.curselection()[0]
            self.lista_tareas.delete(indice)  # Eliminamos la tarea de la lista visual
            self.tareas.pop(indice)  # Eliminamos la tarea de la lista interna
        except IndexError:
            # Si no hay tarea seleccionada, mostramos una advertencia
            messagebox.showwarning("Selección Errónea", "Por favor, selecciona una tarea.")

# Código principal para ejecutar la aplicación
if __name__ == "__main__":
    root = tk.Tk()  # Creamos la ventana principal
    app = TareaApp(root)  # Instanciamos la clase de la aplicación
    root.mainloop()  # Iniciamos el bucle principal de la interfaz gráfica
